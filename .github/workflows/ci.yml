name: CI + SonarCloud

on:
  push:
    branches: 
      - main
      - master
      - develop
  pull_request:
    branches:
      - main
      - master
      - develop

jobs:
  test-and-sonar:
    name: Test & Analyze
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DB_NAME: testdb
      DB_USER: testuser
      PASSWORD: testpass
      DATABASE_HOST: localhost
      DATABASE_PORT: 5432

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # Backend - Django + Pytest
      - name: Install Python dependencies
        run: |
          cd EcommerceBackend
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-django coverage

      - name: Run Django tests with coverage
        working-directory: ./EcommerceBackend
        run: |
          coverage run --source='.' -m pytest --reuse-db
          coverage xml --omit="*/migrations/*,*/venv/*,*/env/*,*/tests/*"

      # Generate coverage from project root
      - name: Generate backend coverage from root
        run: |
          cd EcommerceBackend
          # Run coverage with relative paths from project root
          python -m coverage run --source=EcommerceBackend -m pytest --reuse-db
          python -m coverage xml -o coverage.xml
          
          # Verify the paths
          echo "Generated coverage.xml:"
          head -20 coverage.xml

      # Fix coverage.xml paths to be relative
      - name: Fix backend coverage paths
        run: |
          cd EcommerceBackend
          sed -i 's|<source>/home/runner/work/DSII_Ecommerce/DSII_Ecommerce/EcommerceBackend</source>|<source>.</source>|g' coverage.xml
          sed -i 's|filename="/home/runner/work/DSII_Ecommerce/DSII_Ecommerce/EcommerceBackend/|filename="|g' coverage.xml

      # Frontend - React + Vite + Jest
      - name: Install frontend dependencies
        run: |
          cd EcommerceFrontend
          npm install

      - name: Run frontend tests with coverage
        run: |
          cd EcommerceFrontend
          npm run test -- --coverage --coverageReporters=lcov --passWithNoTests

      # Verify coverage reports exist
      - name: Verify coverage reports
        run: |
          echo "Checking backend coverage..."
          if [ -f "EcommerceBackend/coverage.xml" ]; then
            echo "✓ Backend coverage.xml found"
            head -20 EcommerceBackend/coverage.xml
          else
            echo "✗ Backend coverage.xml not found"
          fi
          
          echo "Checking frontend coverage..."
          if [ -f "EcommerceFrontend/coverage/lcov.info" ]; then
            echo "✓ Frontend lcov.info found"
            head -10 EcommerceFrontend/coverage/lcov.info
          else
            echo "✗ Frontend lcov.info not found"
          fi

      # SonarCloud
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}